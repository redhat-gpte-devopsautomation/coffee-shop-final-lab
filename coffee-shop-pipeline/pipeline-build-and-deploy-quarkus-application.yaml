apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy-quarkus-application
spec:
  params:
  - name: PREFIX
    type: string
    description: PREFIX (GUID of the Shared environment)
    default: GUID
  - name: APP_NAME
    type: string
    description: The application deployment name
    default: coffee-shop
  - name: SOURCE_GIT_URL
    type: string
    description: The application git repository url
    default: https://github.com/redhat-gpte-devopsautomation/coffee-shop-source
  - name: SOURCE_GIT_REVISION
    type: string
    default: master
    description: The application git repository revision
  - name: SOURCE_GIT_CONTEXT_DIR
    type: string
    default: coffee-shop
    description: The subdirectory in the git repository
  - name: KUSTOMIZE_GIT_URL
    type: string
    description: The kustomize git repository url
    default: http://homework-gitea.gpte-hw-cicd.svc:3000/OCP_USERNAME-GUID/coffee-shop-final-lab.git
  - name: KUSTOMIZE_GIT_REVISION
    type: string
    default: master
    description: The kustomize git repository revision
  - name: KUSTOMIZE_GIT_CONTEXT_DIR
    type: string
    default: coffee-shop-kustomize/coffee-shop
    description: The subdirectory in the kustomize git repository
  - name: KUSTOMIZE_GIT_FILE_NAME
    type: string
    default: overlays/production/deployment-patches.yaml
    description: The YAML file in which to patch the image
  - name: MAVEN_MIRROR_URL
    type: string
    description: Maven mirror for Maven Builds
    default: http://homework-nexus.gpte-hw-cicd.svc:8081/repository/maven-all-public/
  - name: NEXUS_REGISTRY_URL
    type: string
    description: External URL for the container registry to set the production image from
    default: NEXUS_REGISTRY_HOSTNAME
  - name: NAMESPACE_DEV
    type: string
    description: Namespace where the buildconfig is located
    default: GUID-dev-coffeeshop
  results:
  - name: image-tag
    description: The Production Image Tag
    value: prod-$(tasks.generate-tag.results.image-tag)
  workspaces:
  - name: app-source
  - name: maven-settings
  - name: images-url
  tasks:

  - name: git-clone
    taskRef:
      kind: ClusterTask
      name: git-clone
    params:
    - name: url
      value: $(params.SOURCE_GIT_URL)
    - name: revision
      value: $(params.SOURCE_GIT_REVISION)
    - name: deleteExisting
      value: 'true'
    workspaces:
    - name: output
      workspace: app-source

  - name: generate-tag
    taskRef:
      kind: Task
      name: generate-tag

  - name: maven-build
    runAfter:
    - git-clone
    - generate-tag
    taskRef:
      kind: Task
      name: maven
    params:
    - name: MAVEN_IMAGE
      value: registry.access.redhat.com/ubi8/openjdk-11:1.3
    - name: CONTEXT_DIR
      value: ./$(params.SOURCE_GIT_CONTEXT_DIR)
    - name: GOALS
      value:
      - -DskipTests
      - clean
      - compile
      - package
    - name: MAVEN_MIRROR_URL
      value: $(params.MAVEN_MIRROR_URL)
    workspaces:
    - name: source
      workspace: app-source
    - name: maven-settings
      workspace: maven-settings

  - name: build-image
    runAfter:
    - maven-build
    taskRef:
      kind: Task
      name: s2i-binary
    params:
    - name: FROM_FILE
      value: ./source/$(params.SOURCE_GIT_CONTEXT_DIR)/target/$(params.APP_NAME)-1.0-SNAPSHOT-runner.jar
    - name: NAMESPACE
      value: $(params.NAMESPACE_DEV)
    - name: BUILDCONFIG
      value: $(params.APP_NAME)
    workspaces:
    - name: source
      workspace: app-source

  - name: tag-image-for-development
    runAfter:
    - build-image
    taskRef:
      kind: Task
      name: openshift-client
    params:
    - name: ARGS
      value:
      - tag
      - $(params.NAMESPACE_DEV)/$(params.APP_NAME):latest
      - $(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)

  - name: set-image-in-dev
    runAfter:
    - tag-image-for-development
    taskRef:
      kind: Task
      name: openshift-client
    params:
    - name: ARGS
      value:
      - set
      - image
      - deployment
      - $(params.APP_NAME)
      - $(params.APP_NAME)=image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
      - -n $(params.NAMESPACE_DEV)

  - name: tag-image-for-production
    runAfter:
    - set-image-in-dev
    taskRef:
      kind: Task
      name: openshift-client
    params:
    - name: ARGS
      value:
      - tag
      - $(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
      - $(params.NAMESPACE_DEV)/$(params.APP_NAME):prod-$(tasks.generate-tag.results.image-tag)

  - name: publish-image
    runAfter:
    - tag-image-for-production
    taskRef:
      kind: ClusterTask
      name: skopeo-copy
    params:
    - name: srcImageURL
      value: docker://image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):prod-$(tasks.generate-tag.results.image-tag)
    - name: srcTLSverify
      value: 'false'
    - name: destImageURL
      value: docker://homework-nexus-registry.gpte-hw-cicd.svc:5000/$(params.PREFIX)-$(params.APP_NAME):prod-$(tasks.generate-tag.results.image-tag)
    - name: destTLSverify
      value: 'false'
    workspaces:
    - name: images-url
      workspace: images-url

  - name: update-kustomize-repo
    runAfter:
    - publish-image
    taskRef:
      kind: Task
      name: update-kustomize-repo
    params:
    - name: gitRepositoryUrl
      value: $(params.KUSTOMIZE_GIT_URL)
    - name: gitRepositoryRevision
      value: $(params.KUSTOMIZE_GIT_REVISION)
    - name: gitPath
      value: $(params.KUSTOMIZE_GIT_CONTEXT_DIR)
    - name: fileName
      value: $(params.KUSTOMIZE_GIT_FILE_NAME)
    - name: image
      value: $(params.NEXUS_REGISTRY_URL)/$(params.PREFIX)-$(params.APP_NAME)
    - name: imageTag
      value: prod-$(tasks.generate-tag.results.image-tag)
    - name: verbose
      value: 'true'

  - name: sync-argocd
    runAfter:
    - update-kustomize-repo
    taskRef:
      kind: Task
      name: argocd-sync-and-wait
    params:
    - name: application-name
      value: $(params.APP_NAME)
    - name: argocd-version
      value: v2.1.7
    - name: flags
      value: --insecure
    - name: wait
      value: "false"
